<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div class="center">
        <div class="pagination">
            <a href="#">&laquo;</a>
            <% for (let i=1; i <=totalPages; i++) { %>
                <a href="javascript:void(0);" data-page="<%= i %>" class="<%= (currentPage === i) ? 'active' : '' %>">
                    <%= i %>
                </a>
                <%= i %>
                    </a>
                    <% } %>
                        <a href="#">&raquo;</a>
        </div>
    </div>
</body>

</html> -->

<!-- <!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/Head') %>
        <link rel="stylesheet" href="/CSS/InboxPage.css" />
</head>

<body>
    <header><%- include('../partials/Header') %></header>
    <div class="container">
        <%- include('../partials/Sidebar') %>
            <div class="content">
                <div class="main" id="emailList">
                    <button class="deleteBtn">Xoá</button>
                    <% if (emails.length> 0) { %> <% emails.forEach(email=> { %>
                            <div class="email-item">
                                <a href="/email-detail/<%= email.ID %>">
                                    <input type="checkbox" name="emailCheckbox" class="email_<%= email.ID %>" />
                                    <span>
                                        <%= email.SUBJECT %>
                                    </span>
                                    <span>
                                        <%= email.MESSAGE %>
                                    </span>
                                    <span>
                                        <%= email.RECEIVED_AT %>
                                    </span>
                                </a>
                            </div>
                            <% }); %>
                                <% } else { %>
                                    <p>No emails available.</p>
                                    <% } %>

                                        <!-- Pagination Section -->
<!-- <div class="pagination">
    <a href="#">&laquo;</a>
    <% for (let i=1; i <=totalPages; i++) { %>
        <a href="" data-page="<%= i %>" class="<%= (currentPage === i) ? 'active' : '' %>">
            <%= i %>
        </a>
        <% } %>
            <a href="#">&raquo;</a>

</div>
</div>
</div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", init);

    async function init() {
        const paginationLinks = document.querySelectorAll(".pagination a");

        paginationLinks.forEach((link) => {
            link.addEventListener("click", async (event) => {
                event.preventDefault();
                const page = link.getAttribute("data-page");

                const response = await fetch(`/inbox?page=${page}`);
                const data = await response.text();

                // Tạo một phần tử tạm thời để lấy nội dung HTML mới
                const tempDiv = document.createElement("div");
                tempDiv.innerHTML = data;

                // Cập nhật chỉ nội dung bên trong #emailList
                const newEmailList = tempDiv.querySelector("#emailList");
                document.querySelector("#emailList").innerHTML =
                    newEmailList.innerHTML;

                // Cập nhật URL mà không làm mới trang
                window.history.pushState({ page }, "", `?page=${page}`);
            });
        });
    }
</script>
</body>

</html> --> -->

const _page = parseInt(req.query.page) || 1;

let _limit = parseInt(req.query.limit) || 5;
let _start = (_page - 1) * _limit;

const sql = `SELECT ID, SUBJECT, MESSAGE, RECEIVED_AT FROM EMAILS ORDER BY RECEIVED_AT DESC LIMIT ? OFFSET ?`;
let db;
try {
db = await connectDb();
const [rows] = await db.query(sql, [_limit, _start]);

// Lấy tổng số email để phân trang
const countSql = `SELECT COUNT(*) AS totalEmails FROM EMAILS`;
const [countRows] = await db.query(countSql);
const totalEmails = countRows[0].totalEmails;
const totalPages = Math.ceil(totalEmails / _limit);


if (rows && rows.length > 0) {
return res.status(200).render('InboxPage', { emails: rows, currentPage: _page, totalPages });
}
return res.status(400).json({ message: `Cannot get the data` });
} catch (error) {
console.error(error);
return res.status(500).json({ message: `${error}` })
}